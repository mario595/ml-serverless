service: merge-lock-queue-service

provider:
  profile: ml-serverless
  name: aws
  runtime: python2.7
  stage: dev
  region: eu-west-1
  iamRoleStatements:
    - Effect: "Allow"
      Resource: "*"
      Action:
        - "dynamodb:*"
    - Effect: "Allow"
      Resource: "*"
      Action:
        - "lambda:*"
    - Effect: "Allow"
      Resource: "*"
      Action:
        - "sns:*"

resources:
  Resources:
    userEventsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'merge-lock'

functions:
  add:
    handler: handler.add
    events:
      - http:
          path: mergelock/add/
          method: post
          integration: lambda
  addDispatcher:
    handler: handler.add_dispatcher
    events:
      - sns: addRequest

  list:
    handler: handler.list
    events:
      - http:
          path: mergelock/list
          method: get
          integration: lambda
  listDispatcher:
    handler: handler.list_dispatcher
    events:
      - sns: listQueueRequest

  remove:
    handler: handler.remove
    events:
      - http:
          path: mergelock/remove/
          method: post
          integration: lambda
  removeDispatcher:
    handler: handler.remove_dispatcher
    events:
      - sns: removeRequest

  
  pop:
    handler: handler.pop
    events:
      - http:
          path: mergelock/pop
          method: get
          integration: lambda

